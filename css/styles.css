/*Cuerpo*/
/*Indicamos la forma en la que se van a colocar los elementos será en grid. Además, le indicamos las columnas y filas que tendrá el cuerpo*/
body {
	display: grid;
	grid-template-columns: 33% 67% ;
    grid-template-rows: auto auto 1fr auto;
    margin: 0%;
}

/*Header*/
/*En este caso, haremos que el header tenga una imagen de fondo (es un gif), le damos formato al texto que tendrá la página, por otro lado le indicaremos que ocupe todo las columnas.
Además, le diremos que tenga un alto, y una disposición en grid, lo cual nos permitirá colocar los objetos por celdas. En el caso del fondo, le diremos que no se repita, que cubra todo
el ancho y que tenga un fijación cuando hagamos scroll*/
header {
    color: #ffffff;
    font-family: 'Courier New', Courier, monospace;
    grid-column: 1/3;
    grid-template-columns: 50% 50%;
    display: grid;
    height: 200px;
    text-align: center;
    background: url("../imagenes/hospital_gif.gif");
    background-repeat: no-repeat;
    background-size:cover;
    background-attachment: fixed;
    grid-row: 1;
}
/*Indicamos en la imagen como se va a comportar respecto al contenedor header, y le damos un ancho y un alto relativo al header*/

/*Le indicamos al h1 su posición en el grid, además, le indicaremos que será alineado en el centro respecto al div como a si mismo.*/
header > h1 {
    grid-column: 2/3;
    grid-row: 1/2;
    display: grid;
    text-align: center;
    align-self: center;
}
/*Le indicamos la disposición que tendrá la imagen de la cabecera llamada Hospital Felipe VI, por último, le diremos que se alinee al centro y que tenga un borde de 10px*/
header > .imagenhospital {
    border: 10px;
    display: grid;
    align-self: center;
    
}
/*Imagen Comunidad de Madrid*/
/*Damos formato a la imagen que esta de cabecera. Le indicamos que tenga el tamaño, donde se va a colocar, el margen respecto al div, y donde se dispondrá respecto al fondo que
para ello le indicamos el z-index*/
.hospital {
    width: 475px;
    height: 100%;
    text-align: right;
    margin: 0;
    z-index: 5;
    grid-column: 1;
    
}
/*Indicamos como se va colocar las listas, además de que le quitaremos la decoración (el icono que viene con ellas)*/
.navegacion ul{
	list-style: none;
	margin: 0;
	padding: 0;
}
/*Damos propiedades al navar, que tendrá una posición sticky, un origen top y va a ir hasta el final con el bottom al 100%. 
Por otro lado, le indicamos que tenga un z-index, es decir, la posición respecto al fondo. El margen que tendrá será de 0px y el background*/
nav{
	grid-column: 1/3;
	position: sticky;
	top: 10px;
	bottom: 100%;
	z-index: 5;
    margin: 0;
    background-color: #d10002;
    grid-row: 2;
    width: auto;
}
/*Al hacer hover sobre los elementos de las listas que se ponga un background rojo y que quite la decoración del texto*/
ul li:hover{
	background-color: #d10002;
	text-decoration: none;
}
/*Le indicamos a la clase navegación que será el contenedor de nuestro menú que ocupe la totalidad del ancho de donde se ubique. Que la fuente dentro de el sea de tamaño medium.
Al igual que tendrá el footer, tiene una posición sticky la cual irá desde 10px de top y hasta el final de hay que tenga un bottom 100%. La alineación del texto será al centro
y la disposición en grid. Le indicamos las columnas que tendrá el menú*/
.navegacion{
	font-size: medium;
    position: sticky;
	top: 0;
	bottom: 100%;
    text-align: center;
    display: grid;
    grid-template-columns: 33% 47% 20%;
}
@media (max-width: 1400px) {
    body {
        margin-top: 0;
    }
    nav{
        width: auto;
       
    }
    .hospital {
        width: 100%;
        height: auto;
    }
    img {
        width: auto;
        height: auto;
    }

}
@media screen and (max-width: 700px) {
    header {
        display: none;
    }
    nav .boton_registro{
        display: none;
    }
    nav{
        height:95%;
    }
    main .cont_fecha {
        top:40;
    }
}
.articulo {
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
/*El botón de registro tendrá una disposición en grid, le indicaremos que ocupe la columna 3, además le indicamos que tenga un margen auto, aunque le indicaremos a parte un 
margen en superior*/
.boton_registro {
    display: grid;
    grid-column: 3;
    width: auto;
    margin: auto;
    margin-top: 7.5% ;
}
/*Dentro del listado le quitaremos el estilo de los listados, además de alinearlo al centro*/
.navegacion ul{
	list-style: none;
    align-self: center;
}
/*Le indicamos que el margen sea 1em, es decir, que ocupe un 1 unidad respecto al contenedor*/
ul.menu {
    margin: 1em;	
}
/*Le indicamos que la posición sea relativa y que todos los listados estén uno al lado del otro*/
.menu > li{
	position: relative;
	display: inline-block;
}
/*Los enlaces dentro de los listados tendrá una disposición en bloque, es decir cada uno ocupará la posición que tiene dentro del html. 
Además le daremos un padding superior e inferior, el color de la fuente será en blanco y la fuente será Open Sans. Por último, le decimos que no tenga decoración el texto*/
.menu > li > a{
	display: block;
	padding: 15px 20px;
	color: #ffffff;
	font-family: 'Open sans';
	text-decoration: none;
}
/*Cuando hagamos hover sobre los enlaces de los elementos li de los listados haremos que se pongan en color negro, que tengan una transición de 0.7s y se subrayen.*/
.menu li a:hover{
	color: #000000;
	transition: all 0.7s;
    text-decoration: underline 2px;
}
/*Le decimos que el menú desplegable tenga una posición absoluta y que ocupe un total de 120% de ancho. Por otro lado le decimos que este oculto con visibility hidden,
 y que tenga una opacidad igual a 0. Por último, le daremos una transición a la opacidad de 1.5s */
.sumenu{
	position: absolute;
	width: 120%;
	visibility: hidden;
	opacity: 0;
	transition: opacity 1.5s;
    z-index: 5;
} 
/*Le damos el estilo a los enlaces del submenu que tendrá una disposición en bloque, además le diremos que tenga un padding de 15px. El color del texto será blanco, el formato de la fuente
será Open sans, no tendrá decoración y el fondo será rojo.*/
.sumenu li a{
	display: block;
	padding: 15px;
	color: #ffffff;
	font-family: 'Open sans';
	text-decoration: none;
    background-color: #d10002;
}
/*Le diremos que al hacer hover la visibilidad en vez de hidden sea visible y la opacidad será 1.*/
.menu li:hover .sumenu{
	visibility: visible;
	opacity: 1;
}
/*Main*/
/*Indicamos la posición que tendrá el main respecto al body*/
main {
    grid-column: 1/3;
    grid-row: 3;
}

/*Footer*/
/*Indicamos que se quiten la decoración de las listas en el footer*/
.contenedor > ul > li, .fila > .contenedor > ul{
    list-style-type: none;
}
/*Indicamos el color de fondo del footer, el padding que tendrá horizontalmente y verticalmente. Además de la posición que tendrá dentro del body y el formato del texto*/
.footer {
    background-color: #d10002;
    padding: 0px 0;
    display: grid;
    grid-column: 1/3;
    grid-row: 4;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
/*Le indicamos el tamaño máximo que tendrá el contenedor general, además del color del fondo y el margen*/
.cont {
    max-width: 1170px;
    background-color: #d10002;
    margin: auto;
}
/*Le indicamos el tamaño que ocupará cada div de las listas que pondremos en el footer*/
.contenedor {
    width: 25%;
    padding: 0 15px;
}
/*Indicamos como se van a colocar los diferentes contenedores del footer*/
.fila {
    display: flex;
    flex-wrap: wrap;
}
/*Le damos un formato al texto que tendrá el pie de página, siendo este el tamaño de la letra, el color y el margen inferior. 
Por último, indicar que haremos que la primera letra sea capital, es decir, mayúscula*/
.contenedor h4, .fila > .contenedor > ul {
    font-size: 18px;
    color: #ffffff;
    text-transform: capitalize;
    margin-bottom: 30px;
}
/*Le indicamos que todos los hijos, meno el último, dentro de la etiqueta de clase contenedor, tengan un margen inferior de 10px*/
.contenedor ul li:not(:last-child){
    margin-bottom: 10px;
}
/*Indicamos el formato que tendrán los enlaces dentro del footer, que se comportarán con un tamaño de fuente de 16px, que tenga letra capital y que no tenga decoración. 
Además indicamos el ancho que tendrá y su disposición que a diferencia de otras será block,lo cual nos permitirá que todo sea un bloque. 
Por último, le damos una transición de que se ejecute a todo y que dure 0,3s, que ease haga que la animación se de forma lenta a rápida*/
.contenedor ul li a, .fila > .contenedor > ul > a{
    font-size: 16px;
    text-transform: capitalize;
    text-decoration: none;
    font-weight: 300;
    color: #ffffff;
    display: block;
    transition: all 0.3s ease;
}
/*Le indicamos los estilos al hacer hover sobre la imagen y que será un cambio de color a negro, le podremos un subrayado, un padding a la izquierda, y le daremos una transición
de 0.5s a todo*/
.contenedor ul li a:hover, .fila > .contenedor > ul > a:hover{
    color: #000000;
    padding-left: 0px ;
    text-decoration: underline;
    transition: all 0.5s;

}
/*Le daremos un formato a los párrafo, lo cual será de un ancho, un margin general automático, alinearemos al centro el texto, le daremos un formato de texto largo, 
le pondremos una fuente y un color*/
.footer p{
    width: 390px;
    margin: auto;
    padding: 7px;
    text-align: center;
    font-size: large;
    font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    color: #fff;
}
/*Le damos un fondo al div con clase de párrafos*/
footer .parrafos {
    background-color:mediumblue;
}

/*Departamentos: Servicios y Descripción*/
/*Damos estilos a los servicios y descripción de los distintos departamentos, lo cual le daremos un fondo gris y un borde de un pixel, con color negro y que sea solido. 
Le damos un radio al borde. Le indicamos un margen y un padding, y por último, le indicaremos una fuente */
.descripcion, .servicios {
    background-color: #f2f2f2;
    border: 1px black solid;
    border-radius: 5px;
    margin: 20px 0;
    padding: 20px;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
/*Damos formato a la cabecerá de formato h3, que tendrá un tamaño de fuente y la familia de la fuente*/
.h3 {
    font-size: x-large;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
/*Le damos a los servicios un formato en grid y le indicamos cuantas columnas van a haber*/
.servicios {
    display: grid;
    grid-template-columns: 50% 50%;
    
}
/*Quitamos la decoración de los listados, además, le damos un padding de 0. Le diremos que ocupe la columna 2 respecto al div de servicios y le damos un margen izquierdo.*/
.servicios ul {
    list-style-type: none;
    padding: 0;
    grid-column: 2;
    margin-left: 100px;
}
/*Indicamos donde se va a colocar dentro del contenedor */
.servicios .h3 {
    align-self: center;
    text-align: center;
}
/*Le indicamos el comportamiento al hacer hover sobre la lista*/
.servicios > ul > li:hover {
    background-color: #f2f2f2;
}
/*Le indicamos el padding que tendrá el listado y la fuente que tendrá el texto*/
.servicios li {
    padding: 5px 0;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

/*Parte de Imágenes de Médicos*/
/*Indicamos que tiene una disposición en grid y le indicamos las filas y columnas que tendrá. Por último, al tener el main una disposición en grid, le damos lo que queremos 
que ocupe respecto al main, que será desde la columna 1 a la 3.*/
main .cardiologos{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-column: 1/3;
}
/*Indicamos el ancho y alto que tendrán las imágenes de los médicos*/
main > .cardiologos > .c1 > img, main > .cardiologos > .c2 > img,
main > .cardiologos > .c3 > img, main > .cardiologos > .c5 > img
, main > .cardiologos > .c4 > img ,main > .cardiologos > .c6 > img{
    width: 300px;
    height: 420px;;
}

/*Imágenes y Contenido Médicos*/

/*Animación*/

/*https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes*/
/*Con esta primera animación hacemos que aparezcan los medicos de izquierda a derecha*/
@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}
/*Con esta segunda animación hacemos que aparezcan los médicos de derecha a izquierda*/
@keyframes fadeOut {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}
/*Indicamos la posición que tendrá cada imagen y la disposición que tendrá el texto. Por otro lado, le redondearemos el borde indicándole su radio.*/
main > .cardiologos > .c1 {
    grid-column: 1;
    grid-row: 1;
    background-color: #d10002;
    text-align: center;
    border-radius: 50px;
    /*En todos los medicos le asignamos la animación que tendrán, le indicamos el tiempo que dura la animación y a partir de cuando se carga la página cuando se va a ejecutar.*/
    animation: fadeIn 2s 1s ease both;
}
main > .cardiologos > .c2 {
    grid-column: 2;
    grid-row: 2;
    background: #4e0cc9;
    text-align: center;
    border-radius: 50px;
    animation: fadeOut 2s 2s ease both;
}
main > .cardiologos > .c3 {
    grid-column: 1;
    grid-row: 2;
    background-color: #d10002;
    text-align: center;
    border-radius: 50px;
    animation: fadeIn 2s 1s ease both;
}
main > .cardiologos > .c4 {
    grid-column: 2;
    grid-row: 1;
    background-color: #4e0cc9;
    border-radius: 50px;
    text-align: center;
    animation: fadeIn 2s 1s ease both;
}
main > .cardiologos > .c5 {
    grid-column: 3;
    grid-row: 2;
    background-color: #d10002;
    text-align: center;
    border-radius: 50px;
    animation: fadeOut 2s 2s ease both;
}
main > .cardiologos > .c6 {
    grid-column: 3;
    grid-row: 1;
    background-color: #d10002;
    border-radius: 50px;
    text-align: center;
    animation: fadeOut 2s 2s ease both;
}
/*Le damos un color y estilo a la fuente de los médicos*/
main > .cardiologos > div > p {
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    color: #fff;
}
/*le damos un tamaño y un margen a los contenedores de las imágenes de los médicos*/
.c1,.c2,.c3,.c4,.c5,.c6 {
    height: auto;
    width: 300px;
    margin: auto;
}
/*Favicons*/
/*Indica mediante variables el color que tomqrán los iconos de las redes sociales en el pie (footer)*/
:root{
    --facebook: #3b5999;
    --instagram: #d75d90;
    --twitter: #0f0f0f;
    --youtube: #ff0000;
    --linkedin: #0a66c2;
}
/*Permite tener una disposición flex al contenedor de los iconos y nos da una posición central. Por otro lado, le indicamos que sea una posición que acompañará la subida,
haciendo que suba cuando hagamos scroll con el ratón*/
.redessociales {
    display: flex;
    background-color: #d10002;
    height: 100px;
    align-items: center;
    justify-content: center;
    position: sticky;
    bottom: 0;
}
/*Ponemos todos los iconos en linea y le damos margen y tamaño a los iconos*/
.redessociales ul li {
    display: inline-block;
    margin: 0 5px;
    width: 50px;
    height: 30px;
    text-align: center;
}
/*Le indicamos la disposición que tendrá los enlaces de los iconos, el fondo y le damos una sombra al enlace. Le damos una transición para hacer la animación*/
.redessociales ul li a {
    display: block;
    padding:0 10px;
    background-color: #808080;
    color: #ffffff;
    line-height: 50px;
    font-size: 18px;
    box-shadow: 0 3px 5px 0px;
    transition: 0.4s;
}
.redessociales ul:hover a{
    filter:blur(1px);
}
/*Le indicamos una transformación que nos permite agrandar el icono al hacer hover y transladarlo en Y. Por último, le quitamos el filtro al icono*/
.redessociales ul li a:hover {
    transform: translateY(-3px) scale(1.5);
    filter: none;
}
/*Mediante variables, le indicamos los colores que tendrá cada icono*/
.redessociales ul li .facebook {
    background-color: var(--facebook);
}
.redessociales ul li .instagram {
    background-color: var(--instagram);
}
.redessociales ul li .twitter {
    background-color: var(--twitter);
}
.redessociales ul li .youtube{
    background-color: var(--youtube);
}
.redessociales ul li .linkedin{
    background-color: var(--linkedin);
}

/*reloj*/
/*Le indicamos la posición que tendrá el contendor, le damos un color de fondo, además, le diremos que a la hora de bajar, se quede en una posición fija junto al encabezado,
por último, para que vaya hacia abajo, le inddicamos un bottom. Le indicamos una fuente al texto.*/
.cont_fecha {
    background-color:#0199cb;
    text-align: center;
    width: 100%;
    position: sticky; 
    top: 120px;
	bottom: 100%;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
/*Indicamos la posición y el tamaño de la fuente que tendrá el reloj*/
#reloj {
    font-size: 25px;
    display: inline;
}
/*Formato que tendrá la fecha dentro del contenedor, que tendrá tamaño, la posición respecto al texto anterior y un padding a la izquierda*/
#fecha {
    font-size:18px;
    display: inline;
    padding-left: 50px;
}

/*Noticias del index*/
/*Le damos una posición al contenedor del texto, le damos un borde y alto/ancho. A continuación, le damos una disposición en grid, lo cual nos permitirá colocar el contenido
por reguillas. Le damos un padding al contenido. Por último, le indicamos una imagen de fondo y el comportamiento que tendrá la imagen (No se repetirá, cubrirá todo el contenido y
tendrá una fijación cuando subamos y bajemos en la página.*/
.articulo {
    border:1px solid black;
    height: auto;
    width:auto;
    display:grid;
    grid-template-columns: auto auto;
    padding:5%;
    background-image: url("../imagenes/hospitalgeneral.png");
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
    
}
/*Indicamos donde se va a situar dentro del div, luego le damos un padding a la izquierda para separarlo un poco del margen, le damos un color y tamaña al texto y le damos un 
color de fondo, además del tamaño que va a ocupar la página*/
.articulo p{
    grid-column: 2;
    grid-row:1;
    padding-left:2%;
    color: white;
    font-size:25px;
    background-color:#0f2b645c;
    width: 90%;
    
}
    .hospitalart {
        height:200px;
        width: 200px;
        margin-top:20px;
        margin-right: 10px;
        
}
/*Indicamos donde se va a colocarse el titulo del contenedor. Al igual que el texto le damos un padding a la izquierda y un color, tanto de fondo como a la fuente*/
.articulo h1 {
    grid-column:2;
    grid-row:1;
    padding-left: 3%;
    color: rgb(255, 255, 255);
    background: linear-gradient(to right, rgba(26, 26, 159, 0.495), pink);
    width:89%;
  
}
/*Por último, le damos estilos a la linea horizontal, que tendrá un margen en todos los lados, una altura acorde al contendor y le damos color*/
.articulo hr {
    margin: 4%;
    height: 3px;
    color: rgb(0, 0, 0);
    background: #ffffff;
}
/*Galería de imágenes con enlaces: https://www.youtube.com/shorts/8Rc18lfl68c*/
/*Le indicamos que la disposición sea flex, es decir, que se vayan colocando en formato flexible en funcion de lo que ocupen unos al lado de los otros. Además le indicaremos el tamaño
en ancho y largo que ocupará el contenedor*/
.noticias {
    margin-top: 100px;
    display: flex;
    width: 100%;
    height: 430px;

}
/*A las imagenes le indicamos que tengan un width de inicio. Le decimos que tenga un flex grow, es decir, nos permite hacer que la imagen ocupe el espacio disponible dentro de su contenedor.
A continuación le decimos con object-fit en cover que se escale en función del tamaño dentro del contenedor. Le damos una opacidad de solo 0.8 y la transición que haga al volver a su posición original se haga 
en medio segundo y con una velocidad ease, es decir, lento al principio pero que termine un poco más rápido*/
.noticias img {
    width: 0px;
    flex-grow: 1;
    object-fit: cover;
    opacity: 0.8;
    transition: 0.5s ease;   
}
/*Le indicamos que cuando hagamos hover sobre la imagen coja un tamaño de 300px y una opacidad de 1. Por último, le hacemos que la tenga un filtro de los colores que tenga la imagen respecto al original
que es pasar de 0% a una diferencia de 100%*/
.noticias img:hover {
    width: 300px;
    opacity: 1;
    filter: contrast(100%);
}
/*Al igual que hemos hecho en las imágenes, lo que hacemos con esto es que los enlaces acompañen la animación que tienen las imágenes*/
.noticias a {
    display: flex;
    flex-grow: 1;
}
/*Distorisión enlaces de Paginas*/
.noticias .enlaces{
    transition: all 0.5s ease;
}

.filtro_distorsionado{
    filter: blur(5px);
}
/*https://www.youtube.com/watch?v=ogiaTnas2-A*/
/*Hacemos que todo el contenido este centrado y a la vez tenga una disposición en flex*/
.noticias2 {
    display: flex;
    justify-content: center;
    align-items: center;
    
}
/*Le damos un margen general de 150px, le decimos que ocupe un 70% del total de la página, le decimos que tenga un tipo de familia de fuente*/
.noticias21 {
    margin: 150px;
    width: 100%;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
/*A la imagen le decimos que tenga un ancho máximo de 320px, además con float en left que se encuentre flotante a la izquierda del contenido que le sigue, le damos un radio de borde de 10px y 
le damos un margen a la derecha de 10px*/
.noticias21 img {
    max-width: 320px;
    float: left;
    border-radius: 10px;
    margin-right: 10px;
}
/*Al texto le diremos que tenga un margen superior de 50px respecto a los elementos anteriores, le damos color, un tamaño de fuente y que ocupe el 100% del contenedor que ocupa*/
.noticias211 p {
    margin-top: 50px;
    color: rgb(0, 0, 0);
    font-size: 16px;
    width: 100%;
} 
/*Le damos un tamaño de fuente y color*/
.noticias211 h2{
    font-size: 50px;
    color: rgb(0, 0, 0);
}
/*Igual que en el h2*/
.noticias211 h3{
    font-size: 25px;
    color: rgb(0, 0, 0);
}
/*Para el div del texto, le damos una disposición en grid y le indicamos el número de columnas que tendrá el grid. Por último, le decimos que ocupe la totalidad de ancho*/
.texto {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    width: 100%;
}
/*Le damos un color al borde de la derecha en negro y de un pixel, el solid servirá para que se vea. Le indicamos su posición respecto al display grid del div .texto y el padding derecho que tendrá*/
.p1 {
    border-right: #000000 1px solid;
    grid-column: 1;
    text-align: justify;
    padding-right: 10px;
}
/*Le damos un padding izquierdo al contrario que al párrafo anterior, le diremos que ocupa la columna 3 y que tenga un margen izquierdo. Por último, que tenga una alineación de texto justificada*/
.p2 {
    margin-left: 10px;
    grid-column: 3;
    padding-left: 10px;
    text-align: justify;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes fadeOut {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.chatbot {
    font-family: 'Franklin Gothic', 'Times New Roman', Arial, sans-serif;
    height: 430px;
    background-color: #f4f4f4;
    grid-column: 2;
    grid-row: 3;
    text-align: center;
  }

  #chat-contenedor {
    max-width: 400px;
    margin: 20px auto;
    border: 1px solid #ccc;
    border-radius: 5px;
    overflow: hidden;
  }

  #chat-mensaje {
    height: 300px;
    overflow-y: scroll;
    padding: 10px;
  }

  #usuario-input {
    width: 80%;
    padding: 8px;
    margin: 5px;
    border: 1px solid #ccc;
    border-radius: 3px;
  }

  #boton-enviar {
    padding: 8px;
    margin: 5px;
    border: 1px solid #4CAF50;
    background-color: #4CAF50;
    color: white;
    border-radius: 3px;
    cursor: pointer;
  }

  .user {
    background-color: #e7513e;
    padding: 5px 10px;
    border-radius: 5px;
    margin-bottom: 10px;
  }

  .bot {
    background-color: #ff8383;
    padding: 5px 10px;
    border-radius: 5px;
    margin-bottom: 10px;
  }

